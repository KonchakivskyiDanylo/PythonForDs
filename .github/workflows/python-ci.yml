name: Tests

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:6
        ports:
          - 27017:27017
        options: >-
          --health-cmd="mongosh --eval 'db.stats()'"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=5

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
        pip install pytest pytest-cov pytest-mock pymongo

    - name: Create .env file
      run: |
        echo "ALERTS_API_TOKEN=mock_token_for_testing" > .env
        echo ".env file created with mock token"

    - name: Wait for MongoDB to be ready
      run: |
        for i in {1..10}; do
          if mongosh --eval 'db.stats()' > /dev/null 2>&1; then
            echo "MongoDB is ready!"
            break
          fi
          echo "Waiting for MongoDB..."
          sleep 5
        done

    - name: Test with pytest
      run: |
        pytest
      env:
        API_TOKEN: ${{ secrets.API_TOKEN }}
        ALERTS_API_TOKEN: ${{ secrets.ALERTS_API_TOKEN }}
        PYTHONPATH: ${{ github.workspace }}
